pipeline{
    agent{
        label "j-slave"
    }
    environment{
        REPO_NAME='portfolio'
        GITHUB_ORG='jackwhelan'
        GH_TOKEN=credentials('GH_TOKEN')
        JOB_NAME="${env.JOB_NAME}"
        BUILD_NUMBER="${env.BUILD_NUMBER}"
    }
    stages{
        stage("Update Commit Status to Pending") {
            steps {
                echo "========Setting Portfolio Commit Status========"
                sh 'curl https://api.github.com/repos/${GITHUB_ORG}/${REPO_NAME}/statuses/${GIT_COMMIT}?access_token=${GH_TOKEN} \
                -H Accept:application/vnd.github.v3+json \
                -X POST \
                -d \'{ \
                    \"state\": \"pending\", \
                }\''
            }
        }
        stage("Build"){
            steps {
                echo "========Building Portfolio========"
                sh "docker-compose build"
            }
            post{
                always{
                    echo "========cleanup========"
                    sh "docker system prune -a -f"
                }
                success{
                    echo "========Build executed successfully========"
                }
                failure{
                    echo "========Build execution failed========"
                }
            }
        }
    }
    post{
        success{
            echo "========Setting Portfolio Commit Status========"
            sh 'curl https://api.github.com/repos/${GITHUB_ORG}/${REPO_NAME}/statuses/${GIT_COMMIT}?access_token=${GH_TOKEN} \
            -H Accept:application/vnd.github.v3+json \
            -X POST \
            -d \'{ \
                \"state\": \"success\", \
            }\''
        }
        failure{
            echo "========Setting Portfolio Commit Status========"
            sh 'curl https://api.github.com/repos/${GITHUB_ORG}/${REPO_NAME}/statuses/${GIT_COMMIT}?access_token=${GH_TOKEN} \
            -H Accept:application/vnd.github.v3+json \
            -X POST \
            -d \'{ \
                \"state\": \"failure\", \
            }\''
        }
    }
}